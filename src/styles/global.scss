@use "variables";
@use "mixins";
@import url("https://fonts.googleapis.com/css2?family=Dongle&family=Lexend+Deca:wght@100..900&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  position: relative;
}

html,
body {
  font-size: 16px;
}
#root {
  height: 100vh;
  overflow: auto;
}

body {
  line-height: 1.5;
  background-color: variables.$color-gray-50;
  font-family: variables.$font-family-primary;
}
.layout-container {
  height: 100%;
}

main {
  height: 100%;
}

// Layout
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: variables.$spacing-6 variables.$spacing-8;
  min-height: 100vh;
}

.grid {
  display: grid;
  gap: variables.$spacing-6;
  grid-template-columns: 1fr;

  @include mixins.responsive(md) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include mixins.responsive(lg) {
    grid-template-columns: repeat(3, 1fr);
  }
}

// Flexbox Utilities
.flex-column {
  @include mixins.flex(column, flex-start, stretch, variables.$spacing-4);
}

.flex-content {
  @include mixins.flex(column, flex-start, center, variables.$spacing-4);
  @include mixins.responsive(md) {
    flex-direction: row;
  }
}

.content-row {
  @include mixins.flex(row, flex-start, center, variables.$spacing-4);
}
.center-absolute {
  @include mixins.center-absolute;
}
.content-centered {
  @include mixins.center-content;
}
.justify-between {
  justify-content: space-between;
}

// Typography
h1 {
  font-family: variables.$font-family-primary;
  font-size: 2.25rem;
  font-weight: bold;
  margin-bottom: variables.$spacing-2;
}

h2 {
  font-family: variables.$font-family-primary;
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: variables.$spacing-4;
}
h3 {
  font-weight: 500;
  margin-bottom: variables.$spacing-2;
}
p {
  font-family: variables.$font-family-primary;
}
.danger {
  color: variables.$color-red !important;
}
.description,
small {
  color: variables.$color-gray-500;
  font-weight: 400;
}
.page-header {
  display: flex;
  flex-direction: column;
  margin-bottom: variables.$spacing-8;
}
a {
  text-decoration: none;
  color: black;
  font-family: variables.$font-family-primary;
  font-size: 1.1rem;
}
.empty-state {
  text-align: center;
  padding: variables.$spacing-12 variables.$spacing-4;
  color: variables.$color-gray-500;

  .empty-icon {
    font-size: 4rem;
    margin-bottom: variables.$spacing-6;
    opacity: 0.6;
    color: variables.$color-secondary;
  }

  .empty-message {
    font-size: 1.25rem;
    margin-bottom: variables.$spacing-3;
    color: variables.$color-gray-700;
    font-weight: 600;
  }
}
.error-state {
  @include mixins.flex(column, center, center, variables.$spacing-4);
  min-height: 50vh;
  padding: variables.$spacing-8;
  text-align: center;

  .error-icon {
    font-size: 3rem;
    color: variables.$color-red-600;
    margin-bottom: variables.$spacing-4;
    opacity: 0.7;
  }

  .error-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: variables.$color-gray-800;
    margin-bottom: variables.$spacing-2;
  }

  .error-message {
    font-size: 1rem;
    color: variables.$color-gray-600;
    max-width: 500px;
    margin-bottom: variables.$spacing-6;
  }
}
.loading-state {
  @include mixins.center-absolute();
  text-align: center;
  flex-direction: column;
  padding: variables.$spacing-12;

  .loading-text {
    margin-top: variables.$spacing-4;
    font-size: 1.1rem;
    color: variables.$color-gray-400;
  }
}
.section-icon {
  color: variables.$color-primary;
  background: variables.$color-primary-100;
  padding: variables.$spacing-2;
  border-radius: variables.$border-radius-md;
  width: 40px;
  height: 40px;
}
.form {
  label {
    font-family: variables.$font-family-secondary;
    font-size: 1.7rem;
    font-weight: 500;
    color: variables.$color-gray-700;
  }
}

// Forms
.form-group {
  margin-bottom: variables.$spacing-6;
  max-width: 400px;
}

%form-input-base {
  width: 100%;
  flex: 1;
  padding: variables.$spacing-3;
  font-size: 0.875rem;
  line-height: 1.25rem;
  color: variables.$color-gray-900;
  background-color: variables.$color-gray-100;
  border: 2px solid variables.$color-gray-200;
  border-radius: variables.$border-radius-md;
  @include mixins.transition(all);
  font-family: variables.$font-family-primary;

  &:focus {
    outline: none;
    border-color: variables.$color-primary;
  }

  &.error {
    border-color: variables.$color-red-600;
  }
}

.form-input,
.form-select,
.form-textarea {
  @extend %form-input-base;
}

.form-textarea {
  min-height: 100px;
  resize: vertical;
}

// Toggle Switch
.toggle-switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;

  input {
    opacity: 0;
    width: 0;
    height: 0;

    &:checked + .toggle-slider {
      background-color: variables.$color-primary;

      &:before {
        transform: translateX(26px);
      }
    }
  }

  .toggle-slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: variables.$color-gray-300;
    transition: 0.2s;
    border-radius: 24px;

    &:before {
      position: absolute;
      content: "";
      height: 18px;
      width: 18px;
      left: 3px;
      bottom: 3px;
      background-color: variables.$color-white;
      transition: 0.2s;
      border-radius: 50%;
    }
  }
}

// Buttons
button {
  @include mixins.button-base;
  font-family: variables.$font-family-secondary;
}
.squircle-btn {
  @include mixins.flex(row, center, center, variables.$spacing-2);
  padding: variables.$spacing-2;
  width: 40px;
  height: 40px;
  border-radius: variables.$border-radius-md !important;
  font-family: variables.$font-family-secondary;
  transition: 0.2s ease-out;
  cursor: pointer;
  & > * {
    transition: 0.1s ease-out;
  }
  &:hover > * {
    transform: scale(1.09);
  }

  &.primary {
    color: variables.$color-primary;

    &:hover,
    &.selected {
      background-color: variables.$color-primary-100;
    }
  }

  &.secondary {
    color: variables.$color-secondary;

    &:hover,
    &.selected {
      background-color: variables.$color-secondary-100;
    }
  }

  &.danger {
    color: variables.$color-red-600;

    &:hover {
      background-color: variables.$color-red-100;
    }
  }
}
.btn {
  @include mixins.flex(row, center, center, 0.8rem);
  padding: 0.2rem 1.5rem;
  font-size: 1.8rem;
  border-radius: variables.$border-radius-full;
  font-family: variables.$font-family-secondary;
  cursor: pointer;
  color: #000;
  transition: all 0.3s ease;
  text-align: center;

  &:hover:not(.btn-disabled, .btn-text) {
    transform: translateY(-2px);
  }
  &:active {
    transform: translateY(0);
    box-shadow: none;
  }
  &.link {
    color: variables.$color-secondary;

    &:hover {
      text-decoration: underline;
    }
  }

  &-primary {
    max-width: 290px;
    min-width: 180px;
    background-color: variables.$color-primary;
    color: variables.$color-white;

    &:hover {
      background-color: variables.$color-primary-200;
      color: variables.$color-primary;
      box-shadow: 0 4px 12px rgba(variables.$color-primary, 0.3);
    }
  }
  &:disabled:not(.btn-text) {
    background-color: variables.$color-gray-300;
    cursor: not-allowed;
    color: variables.$color-gray-400;
    transform: none;
    box-shadow: none;
  }
  &-secondary {
    max-width: 290px;
    min-width: 180px;
    background-color: variables.$color-secondary;
    color: variables.$color-white;
    &:hover {
      background-color: variables.$color-secondary-300;
      color: variables.$color-secondary;
      box-shadow: 0 4px 12px rgba(variables.$color-secondary, 0.3);
    }
  }

  &-tertiary {
    max-width: 290px;
    min-width: 180px;
    background-color: variables.$color-white;
    box-shadow: 0 1px 5px #00000030;
    &:hover {
      opacity: 0.7;
    }
  }
  &-special {
    max-width: 290px;
    min-width: 180px;
    background-color: variables.$color-primary;
    color: #fff;
    box-shadow: 0 1px 5px #00000030;
    &:hover {
      background-color: #6b61ff;
      box-shadow: 0 4px 12px variables.$color-primary;
    }
  }

  &-text {
    color: #000;
    transition: 0.2s;
    &:hover {
      opacity: 0.5;
    }
  }

  &-warning {
    max-width: 290px;
    min-width: 180px;
    background-color: variables.$color-orange;
    color: variables.$color-white;

    &:hover {
      background-color: variables.$color-orange-50;
      color: variables.$color-orange;
      box-shadow: 0 5px 12px rgba(variables.$color-orange, 0.3);
    }
  }
  &-danger {
    background-color: variables.$color-red;
    color: variables.$color-white;
    max-width: 290px;
    min-width: 180px;

    &:hover {
      background-color: variables.$color-red-200;
      color: variables.$color-red;
      box-shadow: 0 4px 12px rgba(variables.$color-red, 0.4);
    }
  }
}

@keyframes toast-slide-in {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.card-section {
  @include mixins.card;
  padding: variables.$spacing-6;
  min-width: 350px;
  text-align: left;
  .section-header {
    @include mixins.flex(row, space-between, center);
    padding-bottom: variables.$spacing-3;
    margin-bottom: variables.$spacing-6;
    border-bottom: 2px solid variables.$color-gray-100;

    h2 {
      @include mixins.flex(row, flex-start, center);
      color: variables.$color-gray-800;
    }

    .section-action {
      color: variables.$color-primary;
      text-decoration: none;
      font-weight: 500;
      font-size: 0.9rem;
      @include mixins.transition(color);

      &:hover {
        color: variables.$color-primary-200;
      }
    }
  }

  .section-content {
    @include mixins.stack-layout(variables.$spacing-4);
  }
}
