@mixin flex($direction: row, $justify: flex-start, $align: center, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
}

@mixin button-base {
  border: none;
  background: none;
  cursor: pointer;
  font-family: $font-family-secondary;
  font-size: 1.5rem;
}

@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property 0.2s ease, comma);
  }
  transition: $transitions;
}

@mixin responsive($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  }
}

@mixin card {
  background-color: $color-white;
  border-radius: $border-radius-xl;
  padding: $spacing-6;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

//Layout Mixins
@mixin center-content {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  margin: auto;
  width: 100%;
}

@mixin center-absolute {
  position: absolute;
  height: 100%;
  
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin center-fixed {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin flex-wrap {
  display: flex;
  flex-wrap: wrap;
  gap: $spacing-4;
}

@mixin grid-layout($columns: 1, $gap: $spacing-4) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin center-column {
  @include flex(column, center, center);
  width: 100%;
}

@mixin center-with-max-width($max-width: 1200px) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $spacing-4;
}

@mixin stack-layout($gap: $spacing-4) {
  @include flex(column, flex-start, stretch, $gap);
  width: 100%;
}

@mixin masonry-grid {
  column-count: 1;
  column-gap: $spacing-4;

  @include responsive(md) {
    column-count: 2;
  }

  @include responsive(lg) {
    column-count: 3;
  }

  > * {
    break-inside: avoid;
    margin-bottom: $spacing-4;
  }
}
